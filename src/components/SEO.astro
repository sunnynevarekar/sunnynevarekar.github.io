---
export interface Props {
  title: string;
  description: string;
  image?: string;
  type?: 'website' | 'article';
  publishedTime?: Date;
  modifiedTime?: Date;
  tags?: string[];
  author?: string;
  canonicalURL?: string;
  siteName?: string;
  siteTitle?: string;
  twitterHandle?: string;
  rssTitle?: string;
}

const {
  title,
  description,
  image = '/images/og-default.jpg',
  type = 'website',
  publishedTime,
  modifiedTime,
  tags = [],
  author,
  canonicalURL = Astro.url.toString(),
  siteName,
  siteTitle,
  twitterHandle,
  rssTitle = 'Blog RSS Feed'
} = Astro.props;

// Use provided values or fallback to author name
const finalAuthor = author || 'Author';
const finalSiteName = siteName || `${finalAuthor}`;
const finalSiteTitle = siteTitle || finalAuthor;

const pageTitle = title.includes(finalSiteTitle) ? title : `${title} | ${finalSiteTitle}`;
const fullImageURL = image.startsWith('http') ? image : `${Astro.site}${image}`;
---

<!-- Primary Meta Tags -->
<title>{pageTitle}</title>
<meta name="title" content={pageTitle} />
<meta name="description" content={description} />
<meta name="author" content={finalAuthor} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={fullImageURL} />
<meta property="og:image:alt" content={`Cover image for ${title}`} />
<meta property="og:site_name" content={finalSiteName} />
<meta property="og:locale" content="en_US" />

{publishedTime && <meta property="article:published_time" content={publishedTime.toISOString()} />}
{modifiedTime && <meta property="article:modified_time" content={modifiedTime.toISOString()} />}
{tags.map(tag => <meta property="article:tag" content={tag} />)}
<meta property="article:author" content={finalAuthor} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={pageTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={fullImageURL} />
{twitterHandle && <meta property="twitter:creator" content={twitterHandle} />}

<!-- Additional SEO -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<!-- Schema.org structured data -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'article' ? "BlogPosting" : "WebSite",
  "headline": title,
  "description": description,
  "image": fullImageURL,
  "author": {
    "@type": "Person",
    "name": finalAuthor,
    "url": `${Astro.site}/portfolio`
  },
  "publisher": {
    "@type": "Person",
    "name": finalAuthor,
    "url": `${Astro.site}/portfolio`
  },
  "url": canonicalURL,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalURL
  },
  ...(publishedTime && { "datePublished": publishedTime.toISOString() }),
  ...(modifiedTime && { "dateModified": modifiedTime.toISOString() }),
  ...(tags.length > 0 && { "keywords": tags.join(", ") })
})} />

<!-- RSS Feed -->
<link rel="alternate" type="application/rss+xml" title={rssTitle} href="/rss.xml" />

<!-- Favicon -->
<link rel="icon" href="/favicon.ico" sizes="32x32" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
<link rel="manifest" href="/manifest.json" />